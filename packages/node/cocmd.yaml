name: node
aliases: |
  alias ni=npm install -S
  alias nid=npm install -D
  alias nb=npm run build
  alias nd=npm run deploy
  alias y=yarn
  alias ya=yarn add
  alias yr=yarn remove
automations:
  - name: setup.yarn
    content:
      description: setup yarn
      env: any
      steps:
      - title: Install yarn
        runner: shell
        content: |          
          if yarn -v > /dev/null; then
            echo "yarn is already installed. skipping..."
          else
            echo "yarn is not installed, installing..."
            npm install -g yarn
          fi
  - name: setup.pnpm
    content:
      description: setup pnpm - https://pnpm.io/installation    
      env: windows
      steps:
      - title: install pnpm
        runner: shell
        content: iwr https://get.pnpm.io/install.ps1 -useb | iex
  - name: setup.pnpm
    content:
      description: setup pnpm - https://pnpm.io/installation    
      env: linux
      steps:
      - title: install pnpm
        runner: shell
        content: |
          curl -fsSL https://get.pnpm.io/install.sh | sh 
          # reload bashrc if exists
          if [ -f ~/.bashrc ]; then
            set +e
            source ~/.bashrc
          fi
  - name: setup.pnpm
    content:
      description: setup pnpm - https://pnpm.io/installation    
      env: osx
      steps:
      - title: install pnpm
        runner: shell
        content: |
          curl -fsSL https://get.pnpm.io/install.sh | sh 

          # reload bashrc if exists
          if [ -f ~/.bashrc ]; then
            set +e
            source ~/.bashrc
          fi

          # reload zshrc if exists
          if [ -f ~/.zshrc ]; then
            set +e
            source ~/.zshrc
          fi 
  - name: remove.pnpm
    content:
      description: remove pnpm
      env: osx
      steps:
      - title: remove pnpm
        runner: shell
        content: |
          set +e
          rm -rf $(pnpm store path)
          rm -rf $PNPM_HOME
          npm rm -g pnpm

  - name: setup
    content:
      description: setup node on macos
      env: osx
      steps:
      - content: |
          brew install node
        description: 'Install Node.js'
        runner: shell
        title: install Node.js

      - title: Install yarn
        runner: cocmd
        content: node.setup.yarn

      - title: Install VSCode plugins
        description: (Optional) If you have VSCode installed, this will install some useful plugins
        runner: shell
        approval_message: Do you whish to install VSCode plugins for Node.js development?
        content: |
          # check that code is installed, if not print message and exit 1
          if ! code -v > /dev/null; then
            echo "VSCode is not installed, skipping..."
            exit 1
          fi

          code --install-extension dbaeumer.vscode-eslint
          code --install-extension esbenp.prettier-vscode
          code --install-extension formulahendry.auto-close-tag
          code --install-extension formulahendry.auto-rename-tag
          code --install-extension ms-vscode.vscode-typescript-tslint-plugin
          code --install-extension msjsdiag.debugger-for-chrome
          code --install-extension Orta.vscode-jest
          code --install-extension PKief.material-icon-theme
          code --install-extension vscode-icons-team.vscode-icons
          code --install-extension wix.vscode-import-cost
          code --install-extension xabikos.JavaScriptSnippets
          code --install-extension zhuangtongfa.material-theme
          code --install-extension Zignd.html-css-class-completion
  - name: clean-cache
    content:
      description: Clean node cache and build artifacts
      steps:
      - title: Clean node cache
        runner: shell
        content: |
          # clear global npm cache
          npm cache clean --force
          
          # clear local node_modules
          rm -rf node_modules

          # clear yarn cache
          yarn cache clean


        
