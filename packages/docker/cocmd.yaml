name: docker
aliases: |
    alias d='docker'
    alias da='docker attach'
    alias dr='docker restart'
    alias dimg='docker images'
    alias dps='docker ps'
    alias dvol='docker volume ls'
    alias dclearimg='docker rmi $(docker images --quiet --filter "dangling=true")'
    alias dclearps='docker ps --filter status=dead --filter status=exited -aq | xargs docker rm -v'
    alias dclearvol='docker volume rm $(docker volume ls -qf dangling=true)'
    alias dc='docker-compose'
    alias dcer='docker-compose exec rails'
    alias dcerjasmine='docker-compose run --rm -e RAILS_ENV=test -p 8888:3000 rails rails jasmine'
    alias dcerspec='docker-compose run --rm -e RAILS_ENV=test rails rspec'
paths:
    - ./scripts/
    - ./bin/
automations: 
    - name: setup
      file: ./cocmd.setup.osx.yaml
    - name: setup
      file: ./cocmd.setup.debian.yaml
    - name: cleanup
      file: ./cocmd.clean.yaml
    - name: monitor
      file: ./cocmd.monitor.yaml
    - name: build-run
      file: ./cocmd.buildrun.yaml
    - name: start
      content:
        env: osx
        description: "Start docker"
        steps:
        - title: start docker
          runner: shell
          content: |
            open /Applications/Docker.app

            # wait until docker is up and runnnig
            while ! docker info > /dev/null 2>&1; do
              sleep 1
              echo "Waiting for Docker to launch..."
            done
            ehco "Docker is up and running"
    - name: start
      content:
        env: linux
        description: "Start docker"
        steps:
        - title: start docker
          runner: shell
          content: |
            sudo systemctl start docker
            sudo systemctl start containerd.service

            # wait until docker is up and runnnig
            while ! docker info > /dev/null 2>&1; do
              sleep 1
              echo "Waiting for Docker to launch..."
            done
            ehco "Docker is up and running"
