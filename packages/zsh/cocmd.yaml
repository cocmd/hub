name: zsh
automations:
  - name: setup
    content:
      description: "Setup zsh,oh-my-zsh for this machine"
      env: osx
      steps:
      - content: |
          # check if iterm already installed, if yes print message and leave
          if [ -d "/Applications/iTerm.app" ]; then
            echo "iTerm2 is already installed, skipping..."
            exit 0
          fi
          brew install --cask iterm2
        description: 'Install iTerm2'
        runner: shell
        title: install iTerm2
      - content: |
          # check if zsh already installed, if yes print message and leave
          if zsh --version > /dev/null; then
            echo "Zsh is already installed, skipping..."
            exit 0
          fi
          brew install zsh

          # Set Zsh as the default shell
          chsh -s $(which zsh)

          # Configure basic Zsh settings (you can customize this further)
          
          echo 'export PATH="$PATH:$HOME/bin:/usr/local/bin:/usr/local/sbin"' >> ~/.zshrc
          echo 'export LC_ALL=en_US.UTF-8' >> ~/.zshrc
          echo 'export LANG=en_US.UTF-8' >> ~/.zshrc

        description: 'Install Zsh'
        runner: shell
        title: install Zsh

      - title: Install Zinit and top plugins 
        description: (Optional) If you have Zsh installed, this will install some useful plugins for devs
        runner: shell
        approval_message: Do you whish to install Zsh plugins for development?
        content: |
          # check that zsh is installed, if not print message and exit 1
          if ! zsh --version > /dev/null; then
            echo "Zsh is not installed, skipping..."
            exit 1
          fi

          # install Zinit plugin manager
          bash -c "$(curl --fail --show-error --silent --location https://raw.githubusercontent.com/zdharma-continuum/zinit/HEAD/scripts/install.sh)"

          set +e
          source ~/.zshrc
          set -e

          zinit self-update

          zinit light zdharma/fast-syntax-highlighting
          zinit light zsh-users/zsh-autosuggestions
          zinit light zsh-users/zsh-completions
          zinit light zsh-users/zsh-history-substring-search

          echo 'zinit light zdharma/fast-syntax-highlighting' >> ~/.zshrc
          echo 'zinit light zsh-users/zsh-autosuggestions' >> ~/.zshrc
          echo 'zinit light zsh-users/zsh-completions' >> ~/.zshrc
          echo 'zinit light zsh-users/zsh-history-substring-search' >> ~/.zshrc

      - title: Install fzf (fuzzy finder)
        description: (Optional) If you have Zsh installed, this will install fzf (fuzzy finder)
        runner: shell
        approval_message: Do you whish to install fzf (fuzzy finder)?
        content: |
          # check that zsh is installed, if not print message and exit 1
          if ! zsh --version > /dev/null; then
            echo "Zsh is not installed, skipping..."
            exit 1
          fi

          # install fzf
          brew install fzf
          $(brew --prefix)/opt/fzf/install

          # add `source $(brew --prefix)/opt/fzf/shell/completion.zsh` to zshrc if not exists
          if ! grep -q "source $(brew --prefix)/opt/fzf/shell/completion.zsh" ~/.zshrc; then
            echo 'source $(brew --prefix)/opt/fzf/shell/completion.zsh' >> ~/.zshrc
          fi

          # add `source $(brew --prefix)/opt/fzf/shell/key-bindings.zsh` to zshrc if not exists
          if ! grep -q "source $(brew --prefix)/opt/fzf/shell/key-bindings.zsh" ~/.zshrc; then
            echo 'source $(brew --prefix)/opt/fzf/shell/key-bindings.zsh' >> ~/.zshrc
          fi

          # add fcd function to zshrc if not exists
          if ! grep -q "fcd()" ~/.zshrc; then
            echo 'fcd() { cd "$(find ~ -type d -path "*/$1*" 2> /dev/null | fzf)" }' >> ~/.zshrc
          fi

          