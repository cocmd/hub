name: osx
version: 0.0.1
automations:
  - name: setup.brew
    content:
      description: setup brew
      env: osx
      steps:
      - runner: shell
        title: install Homebrew
        content: |
          # check if already installed
          if brew -v > /dev/null; then
            echo "Homebrew is already installed, skipping..."
            exit 0
          fi

          # Install Homebrew
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
          
          # if bashrc exists, add brew to path
          if [ -f ~/.bashrc ]; then
            if ! grep -q 'eval "$(/opt/homebrew/bin/brew shellenv)"' ~/.bashrc; then
              echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.bashrc
              set +e
              source ~/.bashrc
            fi
          fi
          
          # if zshrc exists, add brew to path
          if [ -f ~/.zshrc ]; then
            if ! grep -q 'eval "$(/opt/homebrew/bin/brew shellenv)"' ~/.zshrc; then
              echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zshrc
              set +e
              source ~/.zshrc
            fi
          fi
        
  - name: setup
    content:
      description: "Setup common packages on macOS"
      env: osx
      steps:
      - title: install Homebrew
        runner: cocmd
        content: setup.brew
      
      - content: |
          brew install curl
          brew install wget
          brew install unzip
          brew install tree
          brew install jq
        description: 'Install basic development tools and configure Git'
        runner: shell
        title: install basic packages

      - title: install xcode
        description: 'Install Xcode'
        runner: shell
        content: |
          xcode-select --install

      - title: install chrome browser
        description: 'Install Chrome browser'
        runner: shell
        approval_message: Do you whish to install Chrome browser?
        content: |
          # check if chrome not installed already
          if [ -d "/Applications/Google Chrome.app" ]; then
            echo "Chrome is already installed, skipping..."
            exit 0
          fi

          brew install --cask google-chrome

      - title: install firefox browser
        description: 'Install Firefox browser'
        runner: shell
        approval_message: Do you whish to install Firefox browser?
        content: |
          # check if firefox not installed already
          if [ -d "/Applications/Firefox.app" ]; then
            echo "Firefox is already installed, skipping..."
            exit 0
          fi

          brew install --cask firefox
      
      - title: install lastpass
        description: 'Install LastPass'
        runner: shell
        approval_message: Do you whish to install LastPass?
        content: |
          # check if lastpass not installed already
          if [ -d "/Applications/LastPass.app" ]; then
            echo "LastPass is already installed, skipping..."
            exit 0
          fi

          brew install --cask lastpass

      - title: install Enpass
        description: 'Install EnPass'
        runner: shell
        approval_message: Do you whish to install EnPass?
        content: |
          # check if enpass not installed already
          # tbd
          exit 1

      - title: install whatsapp for desktop
        description: 'Install WhatsApp for desktop'
        runner: shell
        approval_message: Do you whish to install WhatsApp for desktop?
        content: |
          # check if whatsapp not installed already
          if [ -d "/Applications/WhatsApp.app" ]; then
            echo "WhatsApp is already installed, skipping..."
            exit 0
          fi
          brew install --cask whatsapp

      - title: install slack
        description: 'Install Slack'
        runner: shell
        approval_message: Do you whish to install Slack?
        content: |
          # check if slack not installed already
          if [ -d "/Applications/Slack.app" ]; then
            echo "Slack is already installed, skipping..."
            exit 0
          fi
          brew install --cask slack

      - title: install zoom
        description: 'Install Zoom'
        runner: shell
        approval_message: Do you whish to install Zoom?
        content: |
          # check if zoom not installed already
          if [ -d "/Applications/zoom.us.app" ]; then
            echo "Zoom is already installed, skipping..."
            exit 0
          fi
          brew install --cask zoom

      - title: install youtube player for desktop
        description: 'Install YouTube player for desktop'
        runner: shell
        approval_message: Do you whish to install YouTube player for desktop?
        content: |
          # check if youtube not installed already
          if [ -d "/Applications/YouTube.app" ]; then
            echo "YouTube is already installed, skipping..."
            exit 0
          fi
          brew install --cask youtube

      - title: install spotify
        description: 'Install Spotify'
        runner: shell
        approval_message: Do you whish to install Spotify?
        content: |
          # check if spotify not installed already
          if [ -d "/Applications/Spotify.app" ]; then
            echo "Spotify is already installed, skipping..."
            exit 0
          fi
          brew install --cask spotify

      - title: install pdf reader 
        description: 'Install PDF reader'
        runner: shell
        approval_message: Do you whish to install PDF reader?
        content: |
          # check if pdf reader not installed already
          if [ -d "/Applications/Adobe Acrobat Reader DC.app" ]; then
            echo "PDF reader is already installed, skipping..."
            exit 0
          fi
          brew install --cask adobe-acrobat-reader

      - title: install vlc player
        description: 'Install VLC player'
        runner: shell
        approval_message: Do you whish to install VLC player?
        content: |
          # check if vlc player not installed already
          if [ -d "/Applications/VLC.app" ]; then
            echo "VLC player is already installed, skipping..."
            exit 0
          fi
          brew install --cask vlc

      - title: install openvpn connect
        description: 'Install OpenVPN Connect'
        runner: shell
        approval_message: Do you whish to install OpenVPN Connect?
        content: |
          # check if openvpn connect not installed already
          if [ -d "/Applications/OpenVPN Connect.app" ]; then
            echo "OpenVPN Connect is already installed, skipping..."
            exit 0
          fi
          brew install --cask openvpn-connect

      - title: install authy
        description: 'Install Authy'
        runner: shell
        approval_message: Do you whish to install Authy?
        content: |
          # check if authy not installed already
          if [ -d "/Applications/Authy Desktop.app" ]; then
            echo "Authy is already installed, skipping..."
            exit 0
          fi
          brew install --cask authy

      - title: install bat
        description: 'Install bat'
        runner: shell
        approval_message: Do you whish to install Bat (like `cat` + syntax hightlighting)?
        content: |
          # check if bat not installed already
          if [ -d "/opt/homebrew/bin/bat" ]; then
            echo "Bat is already installed, skipping..."
            exit 0
          fi
          
          brew install bat


      - title: install exa
        description: 'Install exa'
        runner: shell
        approval_message: Do you whish to install Exa (like `ls` but much better)?
        content: |
          # check if exa not installed already
          if [ -d "/opt/homebrew/bin/exa" ]; then
            echo "Exa is already installed, skipping..."
            exit 0
          fi
          
          brew install exa

          # add alias to replace ls with exa in zshrc and bashrc if not already there
          if ! grep -q "alias ls='exa'" ~/.zshrc; then
            echo "alias ls='exa'" >> ~/.zshrc
          fi
          if ! grep -q "alias ls='exa'" ~/.bashrc; then
            echo "alias ls='exa'" >> ~/.bashrc
          fi